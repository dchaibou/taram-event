plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'gg.jte.gradle' version '3.1.16'
    id 'nu.studer.jooq' version '8.2'
}

group = 'com.taramtech'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'gg.jte:jte-spring-boot-starter-3:3.1.16'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3' 
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.29'
	compileOnly 'org.projectlombok:lombok'
	// developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	jooqGenerator 'org.postgresql:postgresql:42.7.3'
}

jte {
	generate()
	binaryStaticContent = true
}

tasks.named('test') {
	useJUnitPlatform()
}

def env = new Properties()
file("${rootDir}/.env").withInputStream { env.load(it) }

jooq {
	// version = '3.19.9'
	configurations {
		main {
			generationTool {
				jdbc {
					driver = env['DB_DRIVER']
					url = env['DB_URL']
					user = env['DB_USERNAME']
					password = env['DB_PASSWORD']
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase'
						schemata {
							schema {
								inputSchema = 'public'
							}
						}
						includes = '.*'
						excludes = ''
					}
					generate {
						pojos = true
						daos = true
						records = true
					}
					target {
						packageName = 'com.taramtech.domain'
						directory = 'build/generated-jooq'
					}
				}
			}
		}
	}
}

sourceSets.main.java.srcDir 'build/generated-jooq'
sourceSets.main.java.srcDir 'src/main/jte'